/* Add a new animation rule to rotate the wheel */
@keyframes rotateWheel {
  100% {
    transform: rotate(360deg);
  }
}

/* Apply the animation to the container when the spinning state is true */
.spin_container.spin {
  animation: rotateWheel 5s linear infinite;
}

.decision {
  display: flex;
  justify-content: center;
  align-items: center;
  flex-direction: column;
  height: 100vh; /* Set the container height to full viewport height */
  background-color: rgb(58, 148, 102);
}

.decision-wrapper {
  /* Wrapper styles to contain the decision component */
  display: flex;
  align-items: center;
  justify-content: center;
  height: 100vh;
  overflow: hidden;
}

.spin_container {
  width: 500px;
  height: 500px;
  background-color: #ccc;
  border-radius: 50%;
  border: 15px solid #dde;
  position: relative;
  overflow: hidden;
  transition: 5s;
}

.spin_container div {
  height: 50%;
  width: 200px;
  position: absolute;
  clip-path: polygon(100% 0, 50% 100%, 0 0);
  transform: translateX(-50%);
  transform-origin: bottom;
  text-align: center;
  display: flex;
  align-items: center;
  justify-content: center;
  font-size: 20px;
  font-weight: bold;
  font-family: sans-serif;
  color: #fff;
  left: 135px;
}

.arrow {
  position: absolute;
  top: 0;
  left: 50%;
  transform: translateX(-50%);
  color: #fff;
}

.arrow::before {
  content: "â–¼"; /* Replace with any arrow symbol of your choice */
  font-size: 50px;
}

#spin {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  z-index: 10;
  background-color: #e2e2e2;
  text-transform: uppercase;
  border: 8px solid #fff;
  font-weight: bold;
  font-size: 20px;
  color: #a2a2a2;
  width: 80px;
  height: 80px;
  font-family: sans-serif;
  border-radius: 50%;
  cursor: pointer;
  outline: none;
  letter-spacing: 1px;
}

@media screen and (max-width: 768px) {
  .decision {
    font-size: 12px;
  }
}
